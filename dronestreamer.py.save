#!/usr/bin/env python3
import time
import os
import sys
import socket, struct
import signal
import requests
import json
from omxplayer.player import OMXPlayer
from pathlib import Path
from time import sleep

#TODO
#selectbutton press
#LCD display

#STREAM_URI = 'rtsp://184.72.239.149/vod/mp4:BigBuckBunny_175k.mov'
Stream_Url = 'rtsp://172.25.40.240/video1'
API_Url = 'https://jsonplaceholder.typicode.com/todos'



#Get default gateway from /proc/net/route
def get_default_gateway():
	GW = None
	while GW == None:
		GW = os.popen("ip route | grep default | awk {'print$3'}").read()
		GW = GW.rstrip()
		if len(GW) == 0:
			GW = None
			sleep(1)
	return GW



#Fetch Json file and status code
def fetch_Camera_API(IPaddr):
	URL = "https://"+IPaddr
	#URL = "https://"+IPaddr+"/api/getVideoStreams"	#build Api URL from IP
	print(URL)
	try:
		r = requests.get(URL)
		r.raise_for_status()
	except requests.exceptions.HTTPError as errh:
		print ("Http Error:",errh)
		return None
	except requests.exceptions.ConnectionError as errc:
		print ("Error Connecting:",errc)
		return None
	except requests.exceptions.Timeout as errt:
		print ("Timeout Error:",errt)
		return None
	except requests.exceptions.TooManyRedirects as errrd:
		print ("to many Redirects:",errrd)
		return None
	except requests.exceptions.RequestException as err:
		print ("OOps: Something Else",err)
		return None
	except:
		print("connection fault unknown")
		return None

	if r.status_code == 200:
		r = json.loads(r.text)	#convert json to python values
	else:
		r = None

	return r



def check_selected_feed(feedList):
	streamSelected = 0	#TO DO#detect what been selected
#	switch = 2	#detect buton input
	#noOfCameras = len(feedList)
	#if streamSelected > noOfCameras-1:
	#	streamSelected = 0
	#	return streamSelected
	#else:
	return streamSelected

#   if switch > noOfCameras-1:
#		switch = noOfCameras-1
#	stream = feedList[0]['Stream']
#	return switch





########################### MAIN ######################################
def main():
#	os.system("pkill omxplayer") #make sure OMXplayer isnt running
	selected_Stream = 0			 #default stream selected for soft button
	while True:	##main loop
		while True:
			#LCD Print connecting
			defaultGW = get_default_gateway() #dGW is also api server
			ApiData = fetch_Camera_API('api.myjson.com/bins/m0k5t') #http://myjson.com/l6j55 jason emulator
			
			if ApiData == None:
				print("No API data, check connection and API again")
			else:
				CamCount = len(ApiData) #count number of camera objects in json file
				print("Camera Count: ",CamCount)	##count number of camears
				CamInfo={}	#diconatry
				CamInfo.clear()
				#fetch API Infomation
				for x in range(CamCount):		#get Cam Name and Stream
					CamInfo[x] = {}
					CamInfo[x]['Name'] = ApiData[x]['camera_name']
					CamInfo[x]['Stream'] = ApiData[x]['rtsp_link']
					print(CamInfo[x]['Name'], "-", CamInfo[x]['Stream'])
				break


		selected_Stream = check_selected_feed(CamInfo)	#check stream selected
		try:
			player1 = OMXPlayer(CamInfo[selected_Stream]['Stream'], args=['--live','-b', '--no-osd', '--threshold','0'])
		except:
			print("Player failed to start")
		print("started player:",CamInfo[selected_Stream]['Name'],"-",CamInfo[selected_Stream]['Stream'])


		while True:
			try:
				if player1.playback_status() == "Playing":
					print("got here")
					print("got here2")
					
#selected_Stream = check_selected_feed(CamInfo)
					#print("selected stream", selected_stream)
					print("players stream",player1.get_source())
					#if selected_Stream != player1.get_source():
					#	player1.load(CamInfo[selected_Stream]['Stream'])
						#update LCD
			except:
				print("player stopped / Video disconnected / stream unavaliable")
				try:
					player1.quit()
					break
				except:
					break
				#check connection and start again
	sleep(0.1)









if __name__ == "__main__":	#main program loop
	main()


